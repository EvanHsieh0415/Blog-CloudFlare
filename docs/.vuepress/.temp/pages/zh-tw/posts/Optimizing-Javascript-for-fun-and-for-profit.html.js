import comp from "D:/Github/EvanHsieh0415/Mango-Blog/docs/.vuepress/.temp/pages/zh-tw/posts/Optimizing-Javascript-for-fun-and-for-profit.html.vue"
const data = JSON.parse("{\"path\":\"/zh-tw/posts/Optimizing-Javascript-for-fun-and-for-profit.html\",\"title\":\"Optimizing Javascript for fun and for profit\",\"lang\":\"zh-TW\",\"frontmatter\":{\"title\":\"Optimizing Javascript for fun and for profit\",\"icon\":\"fa-brands fa-js\",\"author\":[{\"name\":\"romgrk\",\"url\":\"https://romgrk.com/\"}],\"date\":\"2024-03-21T00:00:00.000Z\",\"category\":[\"程式設計\",\"JavaScrip\",\"文章翻譯\"],\"tag\":[\"JavaScript\",\"優化\"],\"description\":\"原文 Optimizing Javascript for fun and for profit 我常常覺得，JavaScript 程式碼通常運行得比實際可以運行的速度慢很多，這通常是因為沒有經過適當的優化。以下是我找到的一些常見的優化技巧總結。需要注意的是，性能優化的代價往往是程式碼的可讀性，因此何時應該優先考慮性能，何時應該優先考慮可讀性，這是一個留...\",\"gitInclude\":[],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mango-blog.pages.dev/zh-tw/posts/Optimizing-Javascript-for-fun-and-for-profit.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"芒果的部落格\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Optimizing Javascript for fun and for profit\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"原文 Optimizing Javascript for fun and for profit 我常常覺得，JavaScript 程式碼通常運行得比實際可以運行的速度慢很多，這通常是因為沒有經過適當的優化。以下是我找到的一些常見的優化技巧總結。需要注意的是，性能優化的代價往往是程式碼的可讀性，因此何時應該優先考慮性能，何時應該優先考慮可讀性，這是一個留...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-TW\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"romgrk\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JavaScript\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"優化\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2024-03-21T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Optimizing Javascript for fun and for profit\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2024-03-21T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"romgrk\\\",\\\"url\\\":\\\"https://romgrk.com/\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"0. 避免不必要的工作\",\"slug\":\"_0-避免不必要的工作\",\"link\":\"#_0-避免不必要的工作\",\"children\":[]},{\"level\":2,\"title\":\"1. 避免字串比較\",\"slug\":\"_1-避免字串比較\",\"link\":\"#_1-避免字串比較\",\"children\":[]}],\"readingTime\":{\"minutes\":2.74,\"words\":821},\"filePathRelative\":\"zh-tw/posts/Optimizing-Javascript-for-fun-and-for-profit.md\",\"localizedDate\":\"2024年3月21日\",\"excerpt\":\"<div class=\\\"hint-container info\\\">\\n<p class=\\\"hint-container-title\\\">原文</p>\\n<p><a href=\\\"https://romgrk.com/posts/optimizing-javascript\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Optimizing Javascript for fun and for profit</a></p>\\n</div>\\n<p>我常常覺得，JavaScript 程式碼通常運行得比實際可以運行的速度慢很多，這通常是因為沒有經過適當的優化。以下是我找到的一些常見的優化技巧總結。需要注意的是，性能優化的代價往往是程式碼的可讀性，因此何時應該優先考慮性能，何時應該優先考慮可讀性，這是一個留給讀者自行決定的問題。我還要指出，討論優化時，必須討論到效能測試。如果花幾個小時對某個函數進行微優化，讓它的執行速度快 100 倍，但該函數只佔總運行時間的一小部分，那麼這樣的優化其實是毫無意義的。因此，在進行優化之前，第一步也是最重要的一步，就是進行效能測試。在接下來的內容中，我會提到這個話題。同時也要注意，微基準測試（micro-benchmark）往往有缺陷，這也可能包括本文所介紹的測試方法。雖然我已經盡量避免掉入這些陷阱，但在應用本文所介紹的任何方法之前，請務必自行進行效能測試。</p>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
